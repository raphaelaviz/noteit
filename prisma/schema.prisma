datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Assistance {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  categoryId    String       @db.ObjectId
  favorite      Boolean       @default(false)
  editorContent Json?         
  problem       Boolean       @default(false)
  userId        String?       @db.ObjectId
  starter       Boolean       @default(false)
  User          User?         @relation(fields: [userId], references: [id])
  Category      Category?     @relation(fields: [categoryId], references: [id])
}

model Category {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  color         String
  Assistance    Assistance[]
  userId        String?       @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Assistance    Assistance[]
  firstLogin    Boolean   @default(true)

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
